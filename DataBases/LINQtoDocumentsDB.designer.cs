#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace I2P_Project.DataBases
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DocumentsDB")]
	public partial class LINQtoDocumentsDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertdocTypes(docTypes instance);
    partial void UpdatedocTypes(docTypes instance);
    partial void DeletedocTypes(docTypes instance);
    partial void InsertDocumentsDB(DocumentsDB instance);
    partial void UpdateDocumentsDB(DocumentsDB instance);
    partial void DeleteDocumentsDB(DocumentsDB instance);
    #endregion
		
		public LINQtoDocumentsDBDataContext() : 
				base(global::I2P_Project.Properties.Settings.Default.DocumentsDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LINQtoDocumentsDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQtoDocumentsDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQtoDocumentsDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQtoDocumentsDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<docTypes> docTypes
		{
			get
			{
				return this.GetTable<docTypes>();
			}
		}
		
		public System.Data.Linq.Table<DocumentsDB> DocumentsDB
		{
			get
			{
				return this.GetTable<DocumentsDB>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.docTypes")]
	public partial class docTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docID;
		
		private System.Nullable<int> _docName;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocIDChanging(int value);
    partial void OndocIDChanged();
    partial void OndocNameChanging(System.Nullable<int> value);
    partial void OndocNameChanged();
    #endregion
		
		public docTypes()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int docID
		{
			get
			{
				return this._docID;
			}
			set
			{
				if ((this._docID != value))
				{
					this.OndocIDChanging(value);
					this.SendPropertyChanging();
					this._docID = value;
					this.SendPropertyChanged("docID");
					this.OndocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docName", DbType="Int")]
		public System.Nullable<int> docName
		{
			get
			{
				return this._docName;
			}
			set
			{
				if ((this._docName != value))
				{
					this.OndocNameChanging(value);
					this.SendPropertyChanging();
					this._docName = value;
					this.SendPropertyChanged("docName");
					this.OndocNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentsDB")]
	public partial class DocumentsDB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _title;
		
		private int _personID;
		
		private string _description;
		
		private int _price;
		
		private int _isBesteller;
		
		private System.DateTime _timeOfCheckOut;
		
		private int _docType;
		
		private int _docID;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnpersonIDChanging(int value);
    partial void OnpersonIDChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    partial void OnisBestellerChanging(int value);
    partial void OnisBestellerChanged();
    partial void OntimeOfCheckOutChanging(System.DateTime value);
    partial void OntimeOfCheckOutChanged();
    partial void OndocTypeChanging(int value);
    partial void OndocTypeChanged();
    partial void OndocIDChanging(int value);
    partial void OndocIDChanged();
    #endregion
		
		public DocumentsDB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personID", DbType="Int NOT NULL")]
		public int personID
		{
			get
			{
				return this._personID;
			}
			set
			{
				if ((this._personID != value))
				{
					this.OnpersonIDChanging(value);
					this.SendPropertyChanging();
					this._personID = value;
					this.SendPropertyChanged("personID");
					this.OnpersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isBesteller", DbType="Int NOT NULL")]
		public int isBesteller
		{
			get
			{
				return this._isBesteller;
			}
			set
			{
				if ((this._isBesteller != value))
				{
					this.OnisBestellerChanging(value);
					this.SendPropertyChanging();
					this._isBesteller = value;
					this.SendPropertyChanged("isBesteller");
					this.OnisBestellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOfCheckOut", DbType="DateTime NOT NULL")]
		public System.DateTime timeOfCheckOut
		{
			get
			{
				return this._timeOfCheckOut;
			}
			set
			{
				if ((this._timeOfCheckOut != value))
				{
					this.OntimeOfCheckOutChanging(value);
					this.SendPropertyChanging();
					this._timeOfCheckOut = value;
					this.SendPropertyChanged("timeOfCheckOut");
					this.OntimeOfCheckOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docType", DbType="Int NOT NULL")]
		public int docType
		{
			get
			{
				return this._docType;
			}
			set
			{
				if ((this._docType != value))
				{
					this.OndocTypeChanging(value);
					this.SendPropertyChanging();
					this._docType = value;
					this.SendPropertyChanged("docType");
					this.OndocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docID", DbType="Int NOT NULL")]
		public int docID
		{
			get
			{
				return this._docID;
			}
			set
			{
				if ((this._docID != value))
				{
					this.OndocIDChanging(value);
					this.SendPropertyChanging();
					this._docID = value;
					this.SendPropertyChanged("docID");
					this.OndocIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
